import yfinance as yf
from indicators import compute_rsi, compute_stochastic, compute_ema

# –¢–∞–π–º—Ñ—Ä–µ–π–º–∏ –¥–ª—è –∞–Ω–∞–ª—ñ–∑—É
HIGHER_TIMEFRAME = "1h"   # —Å—Ç–∞—Ä—à–∏–π —Ç–∞–π–º—Ñ—Ä–µ–π–º
LOWER_TIMEFRAME = "5m"    # –º–æ–ª–æ–¥—à–∏–π —Ç–∞–π–º—Ñ—Ä–µ–π–º

# –£–≥–æ–¥–∞ –Ω–∞ 3 —Å–≤—ñ—á–∫–∏ (—Ç–æ–±—Ç–æ 15 —Ö–≤–∏–ª–∏–Ω –Ω–∞ 5-—Ö–≤–∏–ª–∏–Ω–Ω–æ–º—É —Ç–∞–π–º—Ñ—Ä–µ–π–º—ñ)
TRADE_DURATION_MINUTES = 15

def analyze(pair: str, bot, chat_id: int):
    try:
        # –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –¥–∞–Ω—ñ –¥–ª—è —Å—Ç–∞—Ä—à–æ–≥–æ —Ç–∞–π–º—Ñ—Ä–µ–π–º—É
        higher_data = yf.download(tickers=pair, interval=HIGHER_TIMEFRAME, period="2d", progress=False)

        if higher_data.empty:
            bot.send_message(chat_id=chat_id, text=f"–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ –¥–ª—è {pair} –Ω–∞ {HIGHER_TIMEFRAME}.")
            return

        # –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä—ñ–≤ –¥–ª—è —Å—Ç–∞—Ä—à–æ–≥–æ —Ç–∞–π–º—Ñ—Ä–µ–π–º—É
        higher_rsi = compute_rsi(higher_data)
        higher_stochastic = compute_stochastic(higher_data)
        higher_ema = compute_ema(higher_data)

        # –í–∏–∑–Ω–∞—á–∞—î–º–æ –∑–∞–≥–∞–ª—å–Ω–∏–π —Ç—Ä–µ–Ω–¥ –Ω–∞ —Å—Ç–∞—Ä—à–æ–º—É —Ç–∞–π–º—Ñ—Ä–µ–π–º—ñ
        trend = None
        if higher_rsi[-1] > 50 and higher_data["Close"].iloc[-1] > higher_ema[-1]:
            trend = "up"
        elif higher_rsi[-1] < 50 and higher_data["Close"].iloc[-1] < higher_ema[-1]:
            trend = "down"

        if not trend:
            # –Ø–∫—â–æ —Ç—Ä–µ–Ω–¥ –Ω–µ–≤–∏–∑–Ω–∞—á–µ–Ω–∏–π ‚Äî –Ω–µ –Ω–∞–¥—Å–∏–ª–∞—î–º–æ —Å–∏–≥–Ω–∞–ª
            return

        # –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –¥–∞–Ω—ñ –¥–ª—è –º–æ–ª–æ–¥—à–æ–≥–æ —Ç–∞–π–º—Ñ—Ä–µ–π–º—É
        lower_data = yf.download(tickers=pair, interval=LOWER_TIMEFRAME, period="1d", progress=False)

        if lower_data.empty:
            bot.send_message(chat_id=chat_id, text=f"–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ –¥–ª—è {pair} –Ω–∞ {LOWER_TIMEFRAME}.")
            return

        # –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä—ñ–≤ –¥–ª—è –º–æ–ª–æ–¥—à–æ–≥–æ —Ç–∞–π–º—Ñ—Ä–µ–π–º—É
        lower_rsi = compute_rsi(lower_data)
        lower_stochastic = compute_stochastic(lower_data)

        # –®—É–∫–∞—î–º–æ —Ç–æ—á–∫—É –≤—Ö–æ–¥—É –Ω–∞ –º–æ–ª–æ–¥—à–æ–º—É —Ç–∞–π–º—Ñ—Ä–µ–π–º—ñ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –¥–æ —Ç—Ä–µ–Ω–¥—É
        signal = None
        if trend == "up":
            if lower_rsi[-1] > 50 and lower_stochastic[-1] < 80:
                signal = "UP"
        elif trend == "down":
            if lower_rsi[-1] < 50 and lower_stochastic[-1] > 20:
                signal = "DOWN"

        if signal:
            message = (
                f"üìà –°–∏–≥–Ω–∞–ª –¥–ª—è {pair}:\n"
                f"‚û°Ô∏è –í—Ö—ñ–¥: {signal}\n"
                f"‚û°Ô∏è –ß–∞—Å —É–≥–æ–¥–∏: {TRADE_DURATION_MINUTES} —Ö–≤–∏–ª–∏–Ω\n"
                f"‚û°Ô∏è –ó–∞ —Ç—Ä–µ–Ω–¥–æ–º: {trend.upper()} —Ç–∞–π–º—Ñ—Ä–µ–π–º {HIGHER_TIMEFRAME}\n"
                f"‚û°Ô∏è –ü–µ—Ä–µ–≤—ñ—Ä–µ–Ω–æ –ø–æ {LOWER_TIMEFRAME}"
            )
            bot.send_message(chat_id=chat_id, text=message)

    except Exception as e:
        bot.send_message(chat_id=chat_id, text=f"–ü–æ–º–∏–ª–∫–∞ –∞–Ω–∞–ª—ñ–∑—É –¥–ª—è {pair}: {str(e)}")
